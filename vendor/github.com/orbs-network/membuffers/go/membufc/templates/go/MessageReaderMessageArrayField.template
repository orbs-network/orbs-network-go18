func (x *{{.MessageName}}) {{.MessageField.FieldName}}Iterator() *{{.MessageName}}{{.MessageField.FieldName}}Iterator {
	return &{{.MessageName}}{{.MessageField.FieldName}}Iterator{iterator: x._message.GetMessageArrayIterator({{.MessageField.FieldIndex}})}
}

type {{.MessageName}}{{.MessageField.FieldName}}Iterator struct {
	iterator *membuffers.Iterator
}

func (i *{{.MessageName}}{{.MessageField.FieldName}}Iterator) HasNext() bool {
	return i.iterator.HasNext()
}

func (i *{{.MessageName}}{{.MessageField.FieldName}}Iterator) Next{{.MessageField.FieldName}}() *{{.MessageField.FieldGoType}} {
	b, s := i.iterator.NextMessage()
	return {{.MessageField.FieldGoType}}Reader(b[:s])
}

func (x *{{.MessageName}}) Raw{{.MessageField.FieldName}}Array() []byte {
	return x._message.RawBufferForField({{.MessageField.FieldIndex}}, 0)
}

func (x *{{.MessageName}}) Raw{{.MessageField.FieldName}}ArrayWithHeader() []byte {
	return x._message.RawBufferWithHeaderForField({{.MessageField.FieldIndex}}, 0)
}

func (x *{{.MessageName}}) String{{.MessageField.FieldName}}() (res string) {
	res = "["
	for i := x.{{.MessageField.FieldName}}Iterator(); i.HasNext(); {
		res += i.Next{{.MessageField.FieldName}}().String() + ","
	}
	res += "]"
	return
}

