package codec

import (
	"github.com/orbs-network/orbs-spec/types/go/protocol"
	"github.com/pkg/errors"
)

type TransactionStatus string

const (
	TRANSACTION_STATUS_PARSE_ERROR                             TransactionStatus = "<PARSE_ERROR>"
	TRANSACTION_STATUS_COMMITTED                               TransactionStatus = "COMMITTED"
	TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED TransactionStatus = "DUPLICATE_TRANSACTION_ALREADY_COMMITTED"
	TRANSACTION_STATUS_PENDING                                 TransactionStatus = "PENDING"
	TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING   TransactionStatus = "DUPLICATE_TRANSACTION_ALREADY_PENDING"
	TRANSACTION_STATUS_NO_RECORD_FOUND                         TransactionStatus = "NO_RECORD_FOUND"
	TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION            TransactionStatus = "REJECTED_UNSUPPORTED_VERSION"
	TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH         TransactionStatus = "REJECTED_VIRTUAL_CHAIN_MISMATCH"
	TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED      TransactionStatus = "REJECTED_TIMESTAMP_WINDOW_EXCEEDED"
	TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH             TransactionStatus = "REJECTED_SIGNATURE_MISMATCH"
	TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME          TransactionStatus = "REJECTED_UNKNOWN_SIGNER_SCHEME"
	TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER               TransactionStatus = "REJECTED_GLOBAL_PRE_ORDER"
	TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER        TransactionStatus = "REJECTED_VIRTUAL_CHAIN_PRE_ORDER"
	TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER       TransactionStatus = "REJECTED_SMART_CONTRACT_PRE_ORDER"
	TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME   TransactionStatus = "REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME"
	TRANSACTION_STATUS_REJECTED_CONGESTION                     TransactionStatus = "REJECTED_CONGESTION"
)

func (x TransactionStatus) String() string {
	return string(x)
}

func transactionStatusDecode(transactionStatus protocol.TransactionStatus) (TransactionStatus, error) {
	switch transactionStatus {
	case protocol.TRANSACTION_STATUS_RESERVED:
		return TRANSACTION_STATUS_PARSE_ERROR, errors.Errorf("reserved TransactionStatus received")
	case protocol.TRANSACTION_STATUS_COMMITTED:
		return TRANSACTION_STATUS_COMMITTED, nil
	case protocol.TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED:
		return TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED, nil
	case protocol.TRANSACTION_STATUS_PENDING:
		return TRANSACTION_STATUS_PENDING, nil
	case protocol.TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING:
		return TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING, nil
	case protocol.TRANSACTION_STATUS_NO_RECORD_FOUND:
		return TRANSACTION_STATUS_NO_RECORD_FOUND, nil
	case protocol.TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION:
		return TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION, nil
	case protocol.TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH:
		return TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH, nil
	case protocol.TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED:
		return TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED, nil
	case protocol.TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH:
		return TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH, nil
	case protocol.TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME:
		return TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME, nil
	case protocol.TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER:
		return TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER, nil
	case protocol.TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER:
		return TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER, nil
	case protocol.TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER:
		return TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER, nil
	case protocol.TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME:
		return TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME, nil
	case protocol.TRANSACTION_STATUS_REJECTED_CONGESTION:
		return TRANSACTION_STATUS_REJECTED_CONGESTION, nil
	default:
		return TRANSACTION_STATUS_PARSE_ERROR, errors.Errorf("unsupported TransactionStatus received: %d", transactionStatus)
	}
}
